version: '3.6'
services:

  traefik:
    image: "traefik:v2.0.0-rc3"
    networks:
      static-network:
        ipv4_address: 172.18.0.5
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.psql.address=:5432"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  postgres:
    image: postgres
    networks:
      static-network:
        ipv4_address: 172.18.0.7
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    labels:
      - traefik.enable=true

  gql:
    build:
      context: .
      dockerfile: ./docker/gql/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.18.0.6
    volumes:
      - ./gql:/gql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gql.rule=Host(`gql.localhost`)"
      - "traefik.http.routers.gql.entrypoints=web"
    ports:
      - "4000:4000"
    depends_on:
      - "postgres"
    restart: always

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    volumes:
      - ./hab:/app
    container_name: "node-react"
    networks:
      static-network:
        ipv4_address: 172.18.0.8
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`HAB.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    ports:
      - "3000:3000"
    depends_on:
    - "postgres"
    - "gql"

volumes:
  db_data:

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.18.0.1/24